cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
dff <- df
dff.head()
head(dff)
set.seed(123)
pob <- rexp(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(100000,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(100000,0.1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(100000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(10000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(100,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(10000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(10000000000,0.3)
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
ma <- function(poblacion)
{
#n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
#set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,4)
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
ma <- function(poblacion)
{
#n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
n <- c(10,30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
ma <- function(poblacion)
{
#n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
ma <- function(poblacion)
{
n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
#n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,4)
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,4)
ma <- function(poblacion)
{
#n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,4)
ma <- function(poblacion)
{
n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
#n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
graphs <- function(dataframe,mu,i)
{
names(dataframe) <- c("# de repetición", "Media", "Desviación estándar", "n", "Repeticiones")
dist <- c('exponenciales', 'uniformes', 'binomiales', 'Poisson')
col <- c('royalblue3','steelblue3','slateblue2','mediumpurple2') #"steelblue"
myTitle <- paste("Muestras", dist[i], sep = " ")
g <- ggplot(dataframe, aes(x = Media)) + geom_density(fill = col[i]) +
facet_grid(n ~ Repeticiones, labeller = label_both) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept = mu, linetype = "dashed") +
ylab('Densidad')
return(g)
}
set.seed(123)
pob <- rexp(100000000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- rexp(100000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,1)
set.seed(123)
pob <- runif(100000,0,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,2)
set.seed(123)
pob <- rbinom(800,10000,0.2)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,3)
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
graphs(df,mu,4)
library(ggplot2)
ma <- function(poblacion)
{
n <- c(5, 10, 30, 50, 100, 150) # Tamaño de muestra
#n <- c(30, 50, 100, 150) # Tamaño de muestra
t <- c(10, 100, 1000, 10000)  # Número de veces que se generan las muestras (repeticiones, trial)
df <- data.frame()
for(i in n)   # Para cada tamaño de muestra
{
col <- c()
for(j in t)   # Hacemos j repeticiones o generaciones de la muestra de tamaño n
{
trial <- 1:j
cont <- j
value <- c()
while(cont>0)
{
muestra <- sample(poblacion,i,replace=TRUE)    # extraemos la muestra de exponenciales de tamaño i
xbar <- mean(muestra)                    # sacamos la media de la muestra
value <- c(value,xbar)                   # Guardamos la media de la muestra
cont <- cont -1                          # Pasamos a generar otra muestra de las j que debemos generae
}
sbar <- sd(value)                     # Desviación estándar de la muestra de tamaño i
col <- cbind(trial,value,sbar,i,j)    # Juntamos el # de repetición en el que vamos, la media y la desviación de la muestra, el tamaño i y el total de repeticiones j
df <- rbind(df,col)                   # Lo guardamos en el dataframe
}
}
return(df)
}
graphs <- function(dataframe,mu,i)
{
names(dataframe) <- c("# de repetición", "Media", "Desviación estándar", "n", "Repeticiones")
dist <- c('exponenciales', 'uniformes', 'binomiales', 'Poisson')
col <- c('royalblue3','steelblue3','slateblue2','mediumpurple2') #"steelblue"
myTitle <- paste("Muestras", dist[i], sep = " ")
g <- ggplot(dataframe, aes(x = Media)) + geom_density(fill = col[i]) +
facet_grid(n ~ Repeticiones, labeller = label_both) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept = mu, linetype = "dashed") +
ylab('Densidad')
return(g)
}
set.seed(123)
pob <- rexp(100000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_exponencial.png")
graphs(df,mu,1)
dev.off()
set.seed(123)
pob <- runif(100000,0,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_exponencial.png")
graphs(df,mu,2)
dev.off()
set.seed(123)
pob <- runif(100000,0,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_exponencial.png")
graphs(df,mu,2)
dev.off()
set.seed(123)
pob <- rexp(100000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_exponencial.png")
graphs(df,mu,1)
dev.off()
set.seed(123)
pob <- rexp(100000,0.3)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
#png(file="tlc_exponencial.png")
graphs(df,mu,1)
#dev.off()
set.seed(123)
pob <- runif(100000,0,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_uniforme.png")
graphs(df,mu,2)
dev.off()
set.seed(123)
pob <- runif(100000,0,1)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
#png(file="tlc_uniforme.png")
graphs(df,mu,2)
#dev.off()
set.seed(123)
pob <- rbinom(800,10000,0.2)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_binomial.png")
graphs(df,mu,3)
dev.off()
set.seed(123)
pob <- rbinom(800,10000,0.2)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
#png(file="tlc_binomial.png")
graphs(df,mu,3)
#dev.off()
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
png(file="tlc_poisson.png")
graphs(df,mu,4)
dev.off()
set.seed(123)
pob <- rpois(100000,0.4)
mu <- mean(pob)
sigma <- sd(pob)
cat('Media: ', mu,'\nDesviación estándar: ',sigma)
df <- ma(pob)
head(df)
#png(file="tlc_poisson.png")
graphs(df,mu,4)
#dev.off()
