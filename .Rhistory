library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label='None') %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label=off) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label=NULL) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label=NULL) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label='none') %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f %<>%
fill_panel(gwIC10, column = 1, row = 1) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
rbinom(10,2)
rbinom(10,2,pron=0.1)
rbinom(10,2,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.1)
rbinom(10,3,prob=0.5)
rbinom(10,3,prob=0.5)
rbinom(10,4,prob=0.5)
rbinom(10,4,prob=0.5)
rbinom(10,4,prob=0.5)
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2) +geom_text('dfsf')
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2)
annotate_figure(gAll,top = text_grob("Cobertura real para el IC binomial del 95%", color = "black")
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2)
annotate_figure(gAll,top = text_grob("Cobertura real para el IC binomial del 95%"))
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2)
png(file="wIC_all.png",width = 700, height = 432)
gAll
dev.off()
library(ggplot2)
library(tidyverse)
library(ggpubr)
muIC <- function(n=50,N=10000,z=0.975)
{
set.seed(123)
df <- data.frame(matrix(NA,n,7))
colnames(df) <- c('# de muestra','n','media','desv. est.','error','LI','LS')
for(i in 1:N)
{
x <- rnorm(n)    # Creamos una muestra de tamaño N
mu <- mean(x)
sigma <- sd(x)
error <- qnorm(z)*sigma/sqrt(n)
df[i,1] <- i
df[i,2] <- n
df[i,3] <- mu
df[i,4] <- sigma
df[i,5] <- error
df[i,6] <- mu - error
df[i,7] <- mu + error
}
return(df)
}
# IC del 90% = (1-0.1)%
# con percentil de 1-0.05=.95
muNormal <- muIC(z=0.95)
muNormal
cuentaCI <- function(dataframe)
{
n <- dataframe$n
N <- length(n)
mu <- dataframe$media
lower <- dataframe$LI
upper <- dataframe$LS
res <- 0
c <- 0
for(i in 1:N)
{
if(0>=lower[i] & 0<=upper[i])
{
c = c + 1
}
}
res <- c/N*100
return(res)
}
data <- muNormal %>% slice(1:150)
x <- data$`# de muestra`
mu <- data$media
L <- data$LI
U <- data$LS
ggplot(data, aes(x = x, y=mu, color=(L>0 | U<0))) +
geom_point(size = 3) +
geom_hline(yintercept = 0, color = 'red', size = 1) +
geom_errorbar(aes(ymax = U, ymin = L)) +
scale_colour_manual(values = c('gray20','red')) +
ggtitle(expression(atop('Intervalos de Confianza para '~mu,paste('\nMuestras normales estándar')))) +
theme(plot.title = element_text(hjust = 0.5), legend.position = 'none') +
xlab('# de muestra') +
ylab(expression(mu))
graphCI <- function(df,min=1,max=100)
{
data <- df %>% slice(min:max)
x <- data$`# de muestra`
mu <- data$media
L <- data$LI
U <- data$LS
ggplot(data, aes(x = x, y=mu, color=(L>0 | U<0))) +
geom_point(size = 3) +
geom_hline(yintercept = 0, color = 'red', size = 1) +
geom_errorbar(aes(ymax = U, ymin = L)) +
scale_colour_manual(values = c('gray20','red')) +
ggtitle(expression(atop('Intervalos de Confianza para '~mu,paste('\nMuestras normales estándar')))) +
theme(plot.title = element_text(hjust = 0.5), legend.position = 'none') +
xlab('# de muestra') +
ylab(expression(mu))
}
ic50 <- muIC(z=0.75)
ic50
cuentaCI(ic50)
#png(file="nIC_50.png",width = 700, height = 432)
graphCI(ic50,1,200)
#dev.off()
ic95 <- muIC(z=0.975)
ic95
cuentaCI(ic95)
#png(file="nIC_95.png",width = 700, height = 432)
graphCI(ic95,1,200)
#dev.off()
bmuIC <- function(n=50,N=10000,p=0.2,z=0.975)
{
set.seed(123)
df <- data.frame(matrix(NA,n,8))
colnames(df) <- c('# de muestra','n','theta','media','desv. est.','error','LI','LS')
for(i in 1:N)
{
x <- sample(c(0,1),size=n,replace = TRUE, prob = c(1-p,p))   # Creamos una muestra de tamaño N
mu <- mean(x)
sigma <- sqrt(mu*(1-mu)/n)
error <- qnorm(z)*sigma
df[i,1] <- i
df[i,2] <- n
df[i,3] <- p
df[i,4] <- mu
df[i,5] <- sigma
df[i,6] <- error
df[i,7] <- mu - error
df[i,8] <- mu + error
}
return(df)
}
bcuentaCI <- function(dataframe)
{
p <- dataframe$theta[1]
n <- dataframe$n
N <- length(n)
mu <- dataframe$media
lower <- dataframe$LI
upper <- dataframe$LS
res <- 0
c <- 0
for(i in 1:N)
{
if(p>=lower[i] & p<=upper[i])
{
c = c + 1
}
}
res <- c/N*100
return(res)
}
bgraphCI <- function(df,min=1,max=100)
{
data <- df %>% slice(min:max)
x <- data$`# de muestra`
mu <- data$media
p <- data$theta[1]
L <- data$LI
U <- data$LS
ggplot(data, aes(x = x, y=mu, color=(L>p | U<p))) +
geom_point(size = 3) +
geom_hline(yintercept = p, color = 'red', size = 1) +
geom_errorbar(aes(ymax = U, ymin = L)) +
scale_colour_manual(values = c('gray20','red')) +
ggtitle(expression(atop('Intervalos de Confianza para '~theta,paste('\nMuestras Bernoullis')))) +
theme(plot.title = element_text(hjust = 0.5), legend.position = 'none') +
xlab('# de muestra') +
ylab(expression(theta))
}
b_ic95 <- bmuIC(p=0.4, z=0.975)
b_ic95
bcuentaCI(b_ic95)
#png(file="bIC_95-4.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
#dev.off()
b_ic50 <- bmuIC(p=0.2, z=0.75)
b_ic50
bcuentaCI(b_ic50)
#png(file="bIC_50-2.png",width = 700, height = 432)
bgraphCI(b_ic50,1,300)
#dev.off()
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
#png(file="wIC_10.png",width = 700, height = 432)
gWald(wIC10)
#dev.off()
wIC30 <- dfWald(n=30)
#png(file="wIC_30.png",width = 700, height = 432)
gWald(wIC30)
#dev.off()
wIC50 <- dfWald(n=50)
#png(file="wIC_50.png",width = 700, height = 432)
gWald(wIC50)
#dev.off()
wIC100 <- dfWald(n=100)
#png(file="wIC_100.png",width = 700, height = 432)
gWald(wIC100)
#dev.off()
gWald_all <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
#wIC10 <- dfWald(n=10)
gwIC10 <- gWald_all(wIC10)
#wIC30 <- dfWald(n=30)
gwIC30 <- gWald_all(wIC30)
#wIC50 <- dfWald(n=50)
gwIC50 <- gWald_all(wIC50)
#wIC100 <- dfWald(n=100)
gwIC100 <- gWald_all(wIC100)
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
ncol = 2, nrow = 2)
#png(file="wIC_all.png",width = 700, height = 432)
gAll
#dev.off()
library(ggplot2)
library(tidyverse)
library(ggpubr)
bmuIC <- function(n=50,N=10000,p=0.2,z=0.975)
{
set.seed(123)
df <- data.frame(matrix(NA,n,8))
colnames(df) <- c('# de muestra','n','theta','media','desv. est.','error','LI','LS')
for(i in 1:N)
{
x <- sample(c(0,1),size=n,replace = TRUE, prob = c(1-p,p))   # Creamos una muestra de tamaño N
mu <- mean(x)
sigma <- sqrt(mu*(1-mu)/n)
error <- qnorm(z)*sigma
df[i,1] <- i
df[i,2] <- n
df[i,3] <- p
df[i,4] <- mu
df[i,5] <- sigma
df[i,6] <- error
df[i,7] <- mu - error
df[i,8] <- mu + error
}
return(df)
}
bmuIC <- function(n=50,N=10000,p=0.2,z=0.975)
{
set.seed(123)
df <- data.frame(matrix(NA,n,8))
colnames(df) <- c('# de muestra','n','theta','media','desv. est.','error','LI','LS')
for(i in 1:N)
{
x <- sample(c(0,1),size=n,replace = TRUE, prob = c(1-p,p))   # Creamos una muestra de tamaño N
mu <- mean(x)
sigma <- sqrt(mu*(1-mu)/n)
error <- qnorm(z)*sigma
df[i,1] <- i
df[i,2] <- n
df[i,3] <- p
df[i,4] <- mu
df[i,5] <- sigma
df[i,6] <- error
df[i,7] <- mu - error
df[i,8] <- mu + error
}
return(df)
}
bmuIC <- function(n=50,N=10000,p=0.2,z=0.975)
{
set.seed(123)
df <- data.frame(matrix(NA,n,8))
colnames(df) <- c('# de muestra','n','theta','media','desv. est.','error','LI','LS')
for(i in 1:N)
{
x <- sample(c(0,1),size=n,replace = TRUE, prob = c(1-p,p))   # Creamos una muestra de tamaño N
mu <- mean(x)
sigma <- sqrt(mu*(1-mu)/n)
error <- qnorm(z)*sigma
df[i,1] <- i
df[i,2] <- n
df[i,3] <- p
df[i,4] <- mu
df[i,5] <- sigma
df[i,6] <- error
df[i,7] <- mu - error
df[i,8] <- mu + error
}
return(df)
}
bcuentaCI <- function(dataframe)
{
p <- dataframe$theta[1]
n <- dataframe$n
N <- length(n)
mu <- dataframe$media
lower <- dataframe$LI
upper <- dataframe$LS
res <- 0
c <- 0
for(i in 1:N)
{
if(p>=lower[i] & p<=upper[i])
{
c = c + 1
}
}
res <- c/N*100
return(res)
}
bgraphCI <- function(df,min=1,max=100)
{
data <- df %>% slice(min:max)
x <- data$`# de muestra`
mu <- data$media
p <- data$theta[1]
L <- data$LI
U <- data$LS
ggplot(data, aes(x = x, y=mu, color=(L>p | U<p))) +
geom_point(size = 3) +
geom_hline(yintercept = p, color = 'red', size = 1) +
geom_errorbar(aes(ymax = U, ymin = L)) +
scale_colour_manual(values = c('gray20','red')) +
ggtitle(expression(atop('Intervalos de Confianza para '~theta,paste('\nMuestras Bernoullis')))) +
theme(plot.title = element_text(hjust = 0.5), legend.position = 'none') +
xlab('# de muestra') +
ylab(expression(theta))
}
b_ic95 <- bmuIC(p=0.4, z=0.975)
b_ic95
bcuentaCI(b_ic95)
#png(file="bIC_95-4.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
#dev.off()
#png(file="bIC_95-8.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
b_ic95 <- bmuIC(p=0.8, z=0.975)
b_ic95
bcuentaCI(b_ic95)
#png(file="bIC_95-8.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
#dev.off()
b_ic95 <- bmuIC(p=0.9, z=0.975)
b_ic95
bcuentaCI(b_ic95)
#png(file="bIC_95-8.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
#dev.off()
b_ic95 <- bmuIC(p=0.9, z=0.975)
b_ic95
bcuentaCI(b_ic95)
#png(file="bIC_95-8.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
#dev.off()
b_ic95 <- bmuIC(p=0.9, z=0.975)
b_ic95
bcuentaCI(b_ic95)
png(file="bIC_95-9.png",width = 700, height = 432)
bgraphCI(b_ic95,1,300)
dev.off()
#png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
b_ic25 <- bmuIC(p=0.2, z=0.875)
b_ic25
bcuentaCI(b_ic25)
#png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
#dev.off()
b_ic25 <- bmuIC(p=0.9, z=0.875)
b_ic25
bcuentaCI(b_ic25)
#png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
#dev.off()
b_ic25 <- bmuIC(p=0.2, z=0.625)
b_ic25
bcuentaCI(b_ic25)
#png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
#dev.off()
b_ic25 <- bmuIC(p=0.2, z=0.625)
b_ic25
bcuentaCI(b_ic25)
png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
dev.off()
b_ic25 <- bmuIC(p=0.2, z=0.625)
b_ic25
bcuentaCI(b_ic25)
#png(file="bIC_25-2.png",width = 700, height = 432)
bgraphCI(b_ic25,1,300)
#dev.off()
