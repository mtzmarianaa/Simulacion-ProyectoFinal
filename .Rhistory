label.x = 1, label.y = 1,
common.legend = True)
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
label.x = 1, label.y = 1,
common.legend = TRUE)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = 1)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = 0.5)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = 0)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = 0.2)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -1)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -5)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -3)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 10)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 1)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 2)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.5)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.3)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.2)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.1)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 1)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.8)
gAll
gAll <- ggarrange(gwIC10,gwIC30,gwIC50,gwIC100,
labels = c('n=10','n=30','n=50','n=100'),
ncol = 2, nrow = 2,
hjust = -4,vjust = 0.9)
gAll
gwIC10 +facet_grid(rows=2,cols=2)
multiplot(gwIC10,gwIC30,gwIC50,gwIC100, layout = matrix(c(1,2,3,4),nrow=2, byrow = TRUE))
ggplot2.multiplot(gwIC10,gwIC30,gwIC50,gwIC100, layout = matrix(c(1,2,3,4),nrow=2, byrow = TRUE))
install.packages("easyGgplot2")
library(ggplot2)
library(tidyverse)
library(ggpubr)
multiplot(gwIC10,gwIC30,gwIC50,gwIC100, layout = matrix(c(1,2,3,4),nrow=2, byrow = TRUE))
install.packages("Rmisc")
library(Rmisc)
multiplot(gwIC10,gwIC30,gwIC50,gwIC100, layout = matrix(c(1,2,3,4),nrow=2, byrow = TRUE))
attach(mtcars)
par(mfrow=c(2,2))
gwIC10
gwIC30
gwIC50
install.packages("popbio")
library(popbio)
attach(mtcars)
par(mfrow=c(2,2))
image2(gwIC10)
combine_plots(gwIC10,gwIC30,gwIC50,gwIC100,labels = c('n=10','n=30','n=50','n=100'),title.text = 'Cobertura real para el IC binomial del 95%')
library(ggplot2)
combine_plots(gwIC10,gwIC30,gwIC50,gwIC100,labels = c('n=10','n=30','n=50','n=100'),title.text = 'Cobertura real para el IC binomial del 95%')
colourpicker:::plotHelperAddin()
install.packages("ggstatsplot")
library(ggstatsplot)
library(ggstatsplot)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(Rmisc)
library(ggstatsplot)
install.packages("ggstatsplot")
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(Rmisc)
library(ggstatsplot)
combine_plots(gwIC10,gwIC30,gwIC50,gwIC100,labels = c('n=10','n=30','n=50','n=100'),title.text = 'Cobertura real para el IC binomial del 95%')
CombinePlots(plots = list(gwIC10,gwIC30,gwIC50,gwIC100),labels = c('n=10','n=30','n=50','n=100'),title.text = 'Cobertura real para el IC binomial del 95%')
multiplot(gwIC10,gwIC30,gwIC50,gwIC100, layout = matrix(c(1,2,3,4),nrow=2, byrow = TRUE))
install.packages("multipanelfigure")
library(magrittr)
library(multipan)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2)
f
f %<>%
fill_panel(gwIC10, column = 1, row = 1) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2,figure_name = 'Cobertura real para el IC binomial del 95%')
f
f %<>%
fill_panel(gwIC10, column = 1, row = 1) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2,figure_name = 'Cobertura real para el IC binomial del 95%')
f %<>%
fill_panel(gwIC10, column = 1, row = 1) %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2, figure_name = 'Cobertura real para el IC binomial del 95%')
f %<>%
fill_panel(gwIC10, column = 1, row = 1,figure_name='aaa') %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2, figure_name = 'Cobertura real para el IC binomial del 95%')
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label='aaa') %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
library(magrittr)
library(multipanelfigure)
f <- multi_panel_figure(columns = 2,rows = 2, figure_name = 'Cobertura real para el IC binomial del 95%')
f %<>%
fill_panel(gwIC10, column = 1, row = 1,label='n=10') %<>%
fill_panel(gwIC30, column = 2, row = 1) %<>%
fill_panel(gwIC50, column = 1, row = 2) %<>%
fill_panel(gwIC100, column = 2, row = 2)
f
gWald_all <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggplot(myTitle) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
gwIC10 <- gWald_all(wIC10)
gWald_all <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggplot(myTitle) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
gwIC10 <- gWald_all(wIC10)
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
wIC10 <- dfWald(n=10)
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
gWald_all <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggplot(myTitle) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
wIC100 <- dfWald(n=100)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(Rmisc)
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(Rmisc)
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
dfWald <- function(n=50,N=10,M 000,aConf=0.95)
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10,N=10)
wIC10
icWald <- function(success=50,n=100,alpha=0.95)
{
df <- data.frame(matrix(NA,ncol=2))
p <- success/n
sd <- sqrt(p*(1-p)/n)
z <- qnorm(1-(1-alpha)/2)
df[1] <- p - z*sd
df[2]<- p + z*sd
return(df)
}
dfWald <- function(n=50,N=10000,aConf=0.95)
{
set.seed(123)
probs <- seq(0.001,0.999,0.01)
df <- data.frame(matrix(NA,ncol=4,nrow = probs))
names(df) <- c('Probabilidad','% de cobertura','% del IC','Tamaño de muestra')
isCovered <- as.numeric()
for(i in 1:length(probs))
{
df[i,1] <- probs[i]
x <- rbinom(n=N,size=n,prob=probs[i])
for(j in 1:N)
{
ci <- icWald(success=x[j],n=n,alpha=aConf)
isCovered[j] <- (ci[1]< probs[i]) & (probs[i]<ci[2])
}
df[i,2] <- mean(isCovered)*100
df[i,3] <- aConf*100
df[i,4] <- n
}
return(df)
}
gWald <- function(df)
{
p <- df$Probabilidad
cob <- df$`% de cobertura`
ic <- df$`% del IC`[1]
n <- df$`Tamaño de muestra`[1]
myTitle <- paste('Cobertura real para el IC binomial del ',ic,'% para n=',n)
g <- ggplot(df, aes(x=p,y=cob)) + geom_line(color='black',size=0.8) +
geom_hline(yintercept = ic, linetype='solid',color='red',size=0.8) +
ggtitle(myTitle) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab('% de cobertura') +
xlab(expression(theta)) +
coord_cartesian(ylim=c(75,100))  # Tomamos del 75 al 100%
return(g)
}
wIC10 <- dfWald(n=10)
